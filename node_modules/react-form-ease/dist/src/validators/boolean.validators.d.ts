declare class Validator {
    private message?;
    private value?;
    private constructor();
    static fromValue(value?: boolean | null): Validator;
    /**
     *
     * @returns Error message if there is one
     */
    validate(): string | undefined;
    /**
     * Validates if the value is not null or undefined.
     * @param message The custom error message to display if the value is null or undefined.
     * @returns The current Validator instance.
     */
    required(message?: string): this;
    /**
     * Validates if the value is true. Null or undefined values will be ignored
     * @param message The custom error message to display if the value is false.
     * @returns The current Validator instance.
     */
    isTrue(message?: string): this;
    /**
     * Validates if the value is false. Null or undefined values will be ignored
     * @param message The custom error message to display if the value is true.
     * @returns The current Validator instance.
     */
    isFalse(message?: string): this;
}
export declare function boolean(value?: boolean | null): Validator;
export {};
